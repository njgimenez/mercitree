{"ast":null,"code":"import _PNG from '@react-pdf/png-js';\nimport _JPEG from 'jay-peg';\nvar global$1 = typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {};\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init() {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\nfunction toByteArray(b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n  var L = 0;\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = tmp >> 16 & 0xFF;\n    arr[L++] = tmp >> 8 & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n  if (placeHolders === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[L++] = tmp >> 8 & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n  return arr;\n}\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('');\n}\nfunction fromByteArray(uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[tmp << 4 & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    output += lookup[tmp >> 10];\n    output += lookup[tmp >> 4 & 0x3F];\n    output += lookup[tmp << 2 & 0x3F];\n    output += '=';\n  }\n  parts.push(output);\n  return parts.join('');\n}\nfunction read(buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n}\nfunction write(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n  buffer[offset + i - d] |= s * 128;\n}\nvar toString = {}.toString;\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined ? global$1.TYPED_ARRAY_SUPPORT : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nkMaxLength();\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n  return that;\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n    return allocUnsafe(this, arg);\n  }\n  return from(this, arg, encodingOrOffset, length);\n}\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n  return fromObject(that, value);\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) ;\n}\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n  return createBuffer(that, size);\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that;\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n  return that;\n}\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that;\n}\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that;\n}\nfunction fromObject(that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n    if (that.length === 0) {\n      return that;\n    }\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n      return fromArrayLike(that, obj);\n    }\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n  return length | 0;\n}\nBuffer.isBuffer = isBuffer$1;\nfunction internalIsBuffer(b) {\n  return !!(b != null && b._isBuffer);\n}\nBuffer.compare = function compare(a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n    default:\n      return false;\n  }\n};\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer;\n};\nfunction byteLength(string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length;\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n  var len = string.length;\n  if (len === 0) return 0;\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n      case 'hex':\n        return len >>> 1;\n      case 'base64':\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return '';\n  }\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n  if (end <= 0) {\n    return '';\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n  if (end <= start) {\n    return '';\n  }\n  if (!encoding) encoding = 'utf8';\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n      case 'ascii':\n        return asciiSlice(this, start, end);\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n      case 'base64':\n        return base64Slice(this, start, end);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this;\n};\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this;\n};\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this;\n};\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\nBuffer.prototype.equals = function equals(b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>';\n};\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n  if (start >= end) {\n    return 1;\n  }\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1;\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -2147483648) {\n    byteOffset = -2147483648;\n  }\n  byteOffset = +byteOffset; // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n  throw new TypeError('val must be string, number or Buffer');\n}\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n      if (found) return i;\n    }\n  }\n  return -1;\n}\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n  return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n    // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf);\n  } else {\n    return fromByteArray(buf.slice(start, end));\n  }\n}\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret;\n}\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret;\n}\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out;\n}\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res;\n}\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n  if (end < start) end = start;\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n  return newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4);\n};\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4);\n};\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8);\n};\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8);\n};\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2;\n};\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2;\n};\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4;\n};\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4;\n};\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2;\n};\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2;\n};\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4;\n};\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4;\n};\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n  var len = end - start;\n  var i;\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n  return len;\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n  if (end <= start) {\n    return this;\n  }\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n  return this;\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return '';\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str;\n}\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction asciiToBytes(str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray;\n}\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n  return byteArray;\n}\nfunction base64ToBytes(str) {\n  return toByteArray(base64clean(str));\n}\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer$1(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj));\n}\nfunction isFastBuffer(obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer(obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0));\n}\nclass PNG {\n  data;\n  width;\n  height;\n  format;\n  constructor(data) {\n    const png = new _PNG(data);\n    this.data = data;\n    this.width = png.width;\n    this.height = png.height;\n    this.format = 'png';\n  }\n  static isValid(data) {\n    try {\n      return !!new PNG(data);\n    } catch {\n      return false;\n    }\n  }\n}\nclass JPEG {\n  data;\n  width;\n  height;\n  format;\n  constructor(data) {\n    this.data = data;\n    this.format = 'jpeg';\n    this.width = 0;\n    this.height = 0;\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n    const markers = _JPEG.decode(this.data);\n    let orientation;\n    for (let i = 0; i < markers.length; i += 1) {\n      const marker = markers[i];\n      if (marker.name === 'EXIF' && marker.entries.orientation) {\n        orientation = marker.entries.orientation;\n      }\n      if (marker.name === 'SOF') {\n        this.width ||= marker.width;\n        this.height ||= marker.height;\n      }\n    }\n    if (orientation > 4) {\n      [this.width, this.height] = [this.height, this.width];\n    }\n  }\n  static isValid(data) {\n    return data && Buffer.isBuffer(data) && data.readUInt16BE(0) === 0xffd8;\n  }\n}\nconst createCache = ({\n  limit = 100\n} = {}) => {\n  let cache = {};\n  let keys = [];\n  return {\n    get: key => key ? cache[key] : null,\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length\n  };\n};\nconst IMAGE_CACHE = createCache({\n  limit: 30\n});\nconst isBuffer = Buffer.isBuffer;\nconst isBlob = src => {\n  return typeof Blob !== 'undefined' && src instanceof Blob;\n};\nconst isDataImageSrc = src => {\n  return 'data' in src;\n};\nconst isBase64Src = imageSrc => 'uri' in imageSrc && /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(imageSrc.uri);\nconst fetchRemoteFile = async src => {\n  const {\n    method = 'GET',\n    headers,\n    body,\n    credentials\n  } = src;\n  const response = await fetch(src.uri, {\n    method,\n    headers,\n    body,\n    credentials\n  });\n  const buffer = await response.arrayBuffer();\n  return Buffer.from(buffer);\n};\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\nconst guessFormat = buffer => {\n  let format;\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n  return format;\n};\nfunction getImage(body, format) {\n  switch (format.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\nconst resolveBase64Image = async ({\n  uri\n}) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  if (!match) throw new Error(`Invalid base64 image: ${uri}`);\n  const format = match[1];\n  const data = match[2];\n  if (!isValidFormat(format)) throw new Error(`Base64 image invalid format: ${format}`);\n  return getImage(Buffer.from(data, 'base64'), format);\n};\nconst resolveImageFromData = async src => {\n  if (src.data && src.format) {\n    return getImage(src.data, src.format);\n  }\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\nconst resolveBufferImage = async buffer => {\n  const format = guessFormat(buffer);\n  if (format) {\n    return getImage(buffer, format);\n  }\n  return null;\n};\nconst resolveBlobImage = async blob => {\n  const {\n    type\n  } = blob;\n  if (!type || type === 'application/octet-stream') {\n    const arrayBuffer = await blob.arrayBuffer();\n    const buffer = Buffer.from(arrayBuffer);\n    return resolveBufferImage(buffer);\n  }\n  if (!type.startsWith('image/')) {\n    throw new Error(`Invalid blob type: ${type}`);\n  }\n  const format = type.replace('image/', '');\n  if (!isValidFormat(format)) {\n    throw new Error(`Invalid blob type: ${type}`);\n  }\n  const buffer = await blob.arrayBuffer();\n  return getImage(Buffer.from(buffer), format);\n};\nconst getImageFormat = body => {\n  const isPng = body[0] === 137 && body[1] === 80 && body[2] === 78 && body[3] === 71 && body[4] === 13 && body[5] === 10 && body[6] === 26 && body[7] === 10;\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n  return extension;\n};\nconst resolveImageFromUrl = async src => {\n  const data = await fetchRemoteFile(src);\n  const format = getImageFormat(data);\n  return getImage(data, format);\n};\nconst getCacheKey = src => {\n  if (isBlob(src) || isBuffer(src)) return null;\n  if (isDataImageSrc(src)) return src.data.toString();\n  return src.uri;\n};\nconst resolveImage = (src, {\n  cache = true\n} = {}) => {\n  let image;\n  const cacheKey = getCacheKey(src);\n  if (isBlob(src)) {\n    image = resolveBlobImage(src);\n  } else if (isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  } else if (isBase64Src(src)) {\n    image = resolveBase64Image(src);\n  } else if (isDataImageSrc(src)) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n  if (cache && cacheKey) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n  return image;\n};\nexport { resolveImage as default };","map":{"version":3,"names":["_PNG","_JPEG","global$1","global","self","window","lookup","revLookup","Arr","Uint8Array","Array","inited","init","code","i","len","length","charCodeAt","toByteArray","b64","j","l","tmp","placeHolders","arr","Error","L","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","toString","isArray","call","INSPECT_MAX_BYTES","Buffer","TYPED_ARRAY_SUPPORT","undefined","kMaxLength","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","allocUnsafe","from","poolSize","_augment","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","Symbol","species","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","byteLength","actual","slice","fromArrayLike","array","byteOffset","obj","internalIsBuffer","copy","isnan","type","data","isBuffer","isBuffer$1","b","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","buf","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","arguments","apply","equals","inspect","str","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","subarray","sliceLen","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","objectWriteUInt16","littleEndian","writeUInt16LE","writeUInt16BE","objectWriteUInt32","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","leadSurrogate","byteArray","hi","lo","src","dst","isFastBuffer","isSlowBuffer","constructor","PNG","width","height","format","png","isValid","JPEG","markers","decode","orientation","marker","name","entries","createCache","cache","keys","get","key","shift","reset","IMAGE_CACHE","isBlob","Blob","isDataImageSrc","isBase64Src","imageSrc","test","uri","fetchRemoteFile","method","headers","body","credentials","response","fetch","arrayBuffer","isValidFormat","lower","guessFormat","getImage","resolveBase64Image","exec","resolveImageFromData","JSON","stringify","resolveBufferImage","resolveBlobImage","blob","startsWith","getImageFormat","isPng","isJpg","extension","resolveImageFromUrl","getCacheKey","resolveImage","image","cacheKey","default"],"sources":["/home/devdisnovo/Documentos/PROYECTOS/merci/node_modules/@react-pdf/image/lib/index.browser.js"],"sourcesContent":["import _PNG from '@react-pdf/png-js';\nimport _JPEG from 'jay-peg';\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined\n  ? global$1.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nkMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) ;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\nBuffer.isBuffer = isBuffer$1;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -2147483648) {\n    byteOffset = -2147483648;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer$1(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nclass PNG {\n    data;\n    width;\n    height;\n    format;\n    constructor(data) {\n        const png = new _PNG(data);\n        this.data = data;\n        this.width = png.width;\n        this.height = png.height;\n        this.format = 'png';\n    }\n    static isValid(data) {\n        try {\n            return !!new PNG(data);\n        }\n        catch {\n            return false;\n        }\n    }\n}\n\nclass JPEG {\n    data;\n    width;\n    height;\n    format;\n    constructor(data) {\n        this.data = data;\n        this.format = 'jpeg';\n        this.width = 0;\n        this.height = 0;\n        if (data.readUInt16BE(0) !== 0xffd8) {\n            throw new Error('SOI not found in JPEG');\n        }\n        const markers = _JPEG.decode(this.data);\n        let orientation;\n        for (let i = 0; i < markers.length; i += 1) {\n            const marker = markers[i];\n            if (marker.name === 'EXIF' && marker.entries.orientation) {\n                orientation = marker.entries.orientation;\n            }\n            if (marker.name === 'SOF') {\n                this.width ||= marker.width;\n                this.height ||= marker.height;\n            }\n        }\n        if (orientation > 4) {\n            [this.width, this.height] = [this.height, this.width];\n        }\n    }\n    static isValid(data) {\n        return data && Buffer.isBuffer(data) && data.readUInt16BE(0) === 0xffd8;\n    }\n}\n\nconst createCache = ({ limit = 100 } = {}) => {\n    let cache = {};\n    let keys = [];\n    return {\n        get: (key) => (key ? cache[key] : null),\n        set: (key, value) => {\n            keys.push(key);\n            if (keys.length > limit) {\n                delete cache[keys.shift()];\n            }\n            cache[key] = value;\n        },\n        reset: () => {\n            cache = {};\n            keys = [];\n        },\n        length: () => keys.length,\n    };\n};\n\nconst IMAGE_CACHE = createCache({ limit: 30 });\nconst isBuffer = Buffer.isBuffer;\nconst isBlob = (src) => {\n    return typeof Blob !== 'undefined' && src instanceof Blob;\n};\nconst isDataImageSrc = (src) => {\n    return 'data' in src;\n};\nconst isBase64Src = (imageSrc) => 'uri' in imageSrc &&\n    /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(imageSrc.uri);\nconst fetchRemoteFile = async (src) => {\n    const { method = 'GET', headers, body, credentials } = src;\n    const response = await fetch(src.uri, {\n        method,\n        headers,\n        body,\n        credentials,\n    });\n    const buffer = await response.arrayBuffer();\n    return Buffer.from(buffer);\n};\nconst isValidFormat = (format) => {\n    const lower = format.toLowerCase();\n    return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\nconst guessFormat = (buffer) => {\n    let format;\n    if (JPEG.isValid(buffer)) {\n        format = 'jpg';\n    }\n    else if (PNG.isValid(buffer)) {\n        format = 'png';\n    }\n    return format;\n};\nfunction getImage(body, format) {\n    switch (format.toLowerCase()) {\n        case 'jpg':\n        case 'jpeg':\n            return new JPEG(body);\n        case 'png':\n            return new PNG(body);\n        default:\n            return null;\n    }\n}\nconst resolveBase64Image = async ({ uri }) => {\n    const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n    if (!match)\n        throw new Error(`Invalid base64 image: ${uri}`);\n    const format = match[1];\n    const data = match[2];\n    if (!isValidFormat(format))\n        throw new Error(`Base64 image invalid format: ${format}`);\n    return getImage(Buffer.from(data, 'base64'), format);\n};\nconst resolveImageFromData = async (src) => {\n    if (src.data && src.format) {\n        return getImage(src.data, src.format);\n    }\n    throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\nconst resolveBufferImage = async (buffer) => {\n    const format = guessFormat(buffer);\n    if (format) {\n        return getImage(buffer, format);\n    }\n    return null;\n};\nconst resolveBlobImage = async (blob) => {\n    const { type } = blob;\n    if (!type || type === 'application/octet-stream') {\n        const arrayBuffer = await blob.arrayBuffer();\n        const buffer = Buffer.from(arrayBuffer);\n        return resolveBufferImage(buffer);\n    }\n    if (!type.startsWith('image/')) {\n        throw new Error(`Invalid blob type: ${type}`);\n    }\n    const format = type.replace('image/', '');\n    if (!isValidFormat(format)) {\n        throw new Error(`Invalid blob type: ${type}`);\n    }\n    const buffer = await blob.arrayBuffer();\n    return getImage(Buffer.from(buffer), format);\n};\nconst getImageFormat = (body) => {\n    const isPng = body[0] === 137 &&\n        body[1] === 80 &&\n        body[2] === 78 &&\n        body[3] === 71 &&\n        body[4] === 13 &&\n        body[5] === 10 &&\n        body[6] === 26 &&\n        body[7] === 10;\n    const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n    let extension = '';\n    if (isPng) {\n        extension = 'png';\n    }\n    else if (isJpg) {\n        extension = 'jpg';\n    }\n    else {\n        throw new Error('Not valid image extension');\n    }\n    return extension;\n};\nconst resolveImageFromUrl = async (src) => {\n    const data = await fetchRemoteFile(src);\n    const format = getImageFormat(data);\n    return getImage(data, format);\n};\nconst getCacheKey = (src) => {\n    if (isBlob(src) || isBuffer(src))\n        return null;\n    if (isDataImageSrc(src))\n        return src.data.toString();\n    return src.uri;\n};\nconst resolveImage = (src, { cache = true } = {}) => {\n    let image;\n    const cacheKey = getCacheKey(src);\n    if (isBlob(src)) {\n        image = resolveBlobImage(src);\n    }\n    else if (isBuffer(src)) {\n        image = resolveBufferImage(src);\n    }\n    else if (cache && IMAGE_CACHE.get(cacheKey)) {\n        return IMAGE_CACHE.get(cacheKey);\n    }\n    else if (isBase64Src(src)) {\n        image = resolveBase64Image(src);\n    }\n    else if (isDataImageSrc(src)) {\n        image = resolveImageFromData(src);\n    }\n    else {\n        image = resolveImageFromUrl(src);\n    }\n    if (!image) {\n        throw new Error('Cannot resolve image');\n    }\n    if (cache && cacheKey) {\n        IMAGE_CACHE.set(cacheKey, image);\n    }\n    return image;\n};\n\nexport { resolveImage as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}