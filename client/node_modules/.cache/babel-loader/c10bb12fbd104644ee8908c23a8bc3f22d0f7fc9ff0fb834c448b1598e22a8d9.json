{"ast":null,"code":"var _jsxFileName = \"/home/devdisnovo/Documentos/PROYECTOS/merci/client/src/components/TreeVisualization.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeVisualization = ({\n  votos\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n\n  // Función para dibujar hoja SVG\n  const drawLeaf = (ctx, x, y, size, angle, color) => {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.scale(size / 76, size / 76); // Escalar basado en el viewBox del SVG\n\n    // Dibujar la forma de la hoja usando el path del SVG\n    ctx.fillStyle = color;\n    ctx.beginPath();\n\n    // Path del SVG convertido a coordenadas de canvas\n    ctx.moveTo(57, 22.1667);\n    ctx.bezierCurveTo(49.0833, 28.5, 52.25, 31.6667, 50.6667, 36.4167);\n    ctx.bezierCurveTo(49.0833, 41.1667, 50.6667, 42.75, 44.3333, 47.5);\n    ctx.bezierCurveTo(36.2227, 53.583, 29.2917, 49.875, 29.2917, 49.875);\n    ctx.bezierCurveTo(27.7083, 51.4583, 21.7708, 54.2292, 21.7708, 54.2292);\n    ctx.lineTo(20.0143, 50.7285);\n    ctx.bezierCurveTo(26.3476, 49.1452, 27.7083, 47.1042, 27.7083, 47.1042);\n    ctx.bezierCurveTo(26.125, 43.9375, 23.75, 38, 28.5, 30.0833);\n    ctx.bezierCurveTo(33.25, 22.1667, 57, 22.1667, 57, 22.1667);\n    ctx.closePath();\n    ctx.fill();\n\n    // Agregar sombra interna para dar profundidad\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n    ctx.beginPath();\n    ctx.moveTo(30.0833, 44.3333);\n    ctx.lineTo(31.6667, 45.9167);\n    ctx.lineTo(31.6667, 45.9167);\n    ctx.bezierCurveTo(34.8333, 44.3333, 36.4167, 39.5833, 36.4167, 39.5833);\n    ctx.bezierCurveTo(38, 34.8333, 45.9167, 26.9167, 45.9167, 26.9167);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const isMobile = window.innerWidth <= 768;\n\n    // Configurar canvas\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Limpiar canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Dibujar cielo con gradiente más suave\n    const skyGradient = ctx.createLinearGradient(0, 0, 0, height * 0.7);\n    skyGradient.addColorStop(0, '#87CEEB');\n    skyGradient.addColorStop(0.5, '#B0E0E6');\n    skyGradient.addColorStop(1, '#98FB98');\n    ctx.fillStyle = skyGradient;\n    ctx.fillRect(0, 0, width, height);\n\n    // Dibujar suelo\n    const groundGradient = ctx.createLinearGradient(0, height * 0.7, 0, height);\n    groundGradient.addColorStop(0, '#98FB98');\n    groundGradient.addColorStop(1, '#228B22');\n    ctx.fillStyle = groundGradient;\n    ctx.fillRect(0, height * 0.7, width, height * 0.3);\n\n    // Dibujar nubes decorativas (detrás del árbol)\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n    ctx.shadowColor = 'rgba(255, 255, 255, 0.5)';\n    ctx.shadowBlur = 10;\n\n    // Nube izquierda\n    ctx.beginPath();\n    ctx.arc(width * 0.15, height * 0.08, 35, 0, 2 * Math.PI);\n    ctx.arc(width * 0.15 + 30, height * 0.08, 28, 0, 2 * Math.PI);\n    ctx.arc(width * 0.15 + 55, height * 0.08, 22, 0, 2 * Math.PI);\n    ctx.arc(width * 0.15 + 20, height * 0.08 - 15, 25, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Nube derecha\n    ctx.beginPath();\n    ctx.arc(width * 0.85, height * 0.12, 30, 0, 2 * Math.PI);\n    ctx.arc(width * 0.85 + 25, height * 0.12, 25, 0, 2 * Math.PI);\n    ctx.arc(width * 0.85 + 45, height * 0.12, 18, 0, 2 * Math.PI);\n    ctx.arc(width * 0.85 + 15, height * 0.12 - 12, 20, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.shadowBlur = 0;\n\n    // Cargar y dibujar la imagen del árbol\n    const treeImage = new Image();\n    treeImage.onload = () => {\n      // Calcular dimensiones del árbol centrado\n      const treeSize = isMobile ? 200 : 300;\n      const treeX = width / 2 - treeSize / 2;\n      const treeY = isMobile ? height - 280 : height - 380;\n\n      // Dibujar la imagen del árbol\n      ctx.drawImage(treeImage, treeX, treeY, treeSize, treeSize);\n\n      // Después de dibujar el árbol, dibujar las hojas\n      drawLeavesAfterTree();\n    };\n\n    // Función para dibujar las hojas después de que se carga el árbol\n    const drawLeavesAfterTree = () => {\n      // Configuraciones para posicionamiento de hojas\n      const treeCenterX = width / 2;\n      const treeCenterY = isMobile ? height - 150 : height - 200; // Ajustado para árbol más bajo\n\n      // Dibujar hojas usando espiral de Fibonacci para distribución más natural\n      votos.forEach((voto, index) => {\n        const angle = index * 2.4; // Ángulo dorado\n        // Reagrupar distribución 15% más al centro (reducir radio)\n        const baseRadius = isMobile ? 50 + Math.sqrt(index) * 8 : 100 + Math.sqrt(index) * 18;\n        const radius = baseRadius * 0.85; // Reducir 15% para reagrupar al centro\n\n        // Agregar variación aleatoria para hacer más natural\n        const randomAngle = (Math.random() - 0.5) * 0.5;\n        const randomRadius = (Math.random() - 0.5) * 20;\n        const leafX = treeCenterX + Math.cos(angle + randomAngle) * (radius + randomRadius);\n        const leafY = treeCenterY + Math.sin(angle + randomAngle) * (radius + randomRadius) * 0.6; // Más ovalado\n\n        // Reducir tamaño de hojas 5%\n        const baseLeafSize = 87 + Math.random() * 38;\n        const leafSize = baseLeafSize * 0.95; // Reducir 5%\n        const leafColor = voto.prediccion === 'varon' ? '#1E40AF' : '#BE185D';\n        const leafAngle = Math.random() * Math.PI * 2; // Rotación aleatoria\n\n        drawLeaf(ctx, leafX, leafY, leafSize, leafAngle, leafColor);\n      });\n    };\n\n    // Intentar cargar la imagen del árbol, si no existe usar el árbol dibujado\n    treeImage.onerror = () => {\n      // Si no se puede cargar la imagen, dibujar el árbol original\n      drawOriginalTree();\n      drawLeavesAfterTree();\n    };\n    treeImage.src = '/arbol.png';\n\n    // Función para dibujar el árbol original si no hay imagen\n    const drawOriginalTree = () => {\n      // Dibujar tronco del árbol con gradiente (estirado hasta abajo, ajustado para móvil)\n      const trunkGradient = ctx.createLinearGradient(width / 2 - 25, height - 280, width / 2 + 25, height - 280);\n      trunkGradient.addColorStop(0, '#8B4513');\n      trunkGradient.addColorStop(0.5, '#A0522D');\n      trunkGradient.addColorStop(1, '#8B4513');\n      ctx.fillStyle = trunkGradient;\n      // Bajar el tronco más hacia el borde inferior\n      const trunkHeight = isMobile ? 300 : 350;\n      const trunkY = isMobile ? height - 300 : height - 350;\n      ctx.fillRect(width / 2 - 25, trunkY, 50, trunkHeight);\n\n      // Dibujar ramas principales con mejor distribución\n      ctx.strokeStyle = '#654321';\n      ctx.lineWidth = 10;\n      ctx.lineCap = 'round';\n\n      // Posiciones base para las ramas (ajustadas para posición más baja)\n      const branchBaseY = isMobile ? height - 300 : height - 360;\n      const branchMidY = isMobile ? height - 330 : height - 390;\n      const branchEndY = isMobile ? height - 350 : height - 410;\n      const branchSecY = isMobile ? height - 320 : height - 380;\n      const branchSecMidY = isMobile ? height - 340 : height - 400;\n      const branchSecEndY = isMobile ? height - 360 : height - 420;\n      const branchTopY = isMobile ? height - 310 : height - 370;\n      const branchTopMidY = isMobile ? height - 350 : height - 410;\n      const branchTopEndY = isMobile ? height - 390 : height - 450;\n\n      // Rama izquierda principal\n      ctx.beginPath();\n      ctx.moveTo(width / 2 - 15, branchBaseY);\n      ctx.quadraticCurveTo(width / 2 - 60, branchMidY, width / 2 - 100, branchEndY);\n      ctx.stroke();\n\n      // Rama derecha principal\n      ctx.beginPath();\n      ctx.moveTo(width / 2 + 15, branchBaseY);\n      ctx.quadraticCurveTo(width / 2 + 60, branchMidY, width / 2 + 100, branchEndY);\n      ctx.stroke();\n\n      // Ramas secundarias izquierdas\n      ctx.lineWidth = 6;\n      ctx.beginPath();\n      ctx.moveTo(width / 2 - 8, branchSecY);\n      ctx.quadraticCurveTo(width / 2 - 40, branchSecMidY, width / 2 - 70, branchSecEndY);\n      ctx.stroke();\n\n      // Ramas secundarias derechas\n      ctx.beginPath();\n      ctx.moveTo(width / 2 + 8, branchSecY);\n      ctx.quadraticCurveTo(width / 2 + 40, branchSecMidY, width / 2 + 70, branchSecEndY);\n      ctx.stroke();\n\n      // Ramas superiores\n      ctx.lineWidth = 4;\n      ctx.beginPath();\n      ctx.moveTo(width / 2, branchTopY);\n      ctx.quadraticCurveTo(width / 2 - 30, branchTopMidY, width / 2 - 50, branchTopEndY);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(width / 2, branchTopY);\n      ctx.quadraticCurveTo(width / 2 + 30, branchTopMidY, width / 2 + 50, branchTopEndY);\n      ctx.stroke();\n    };\n  }, [votos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '625px',\n      border: '2px solid #ddd',\n      borderRadius: '10px',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: '20px',\n        left: '20px',\n        background: 'rgba(255, 255, 255, 0.9)',\n        padding: '15px',\n        borderRadius: '10px',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.3)'\n      },\n      children: [(!window.innerWidth || window.innerWidth > 768) && /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 10px 0',\n          color: '#333',\n          fontSize: '1rem'\n        },\n        children: \"Leyenda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: window.innerWidth <= 768 ? 'row' : 'column',\n          gap: '8px',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '20px',\n              height: '15px',\n              backgroundColor: '#1E40AF',\n              borderRadius: '50%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '0.9rem',\n              color: '#333'\n            },\n            children: \"Ni\\xF1o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '20px',\n              height: '15px',\n              backgroundColor: '#BE185D',\n              borderRadius: '50%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '0.9rem',\n              color: '#333'\n            },\n            children: \"Ni\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px',\n            marginTop: window.innerWidth <= 768 ? '0' : '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '1.2rem'\n            },\n            children: \"\\uD83C\\uDF3F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '0.9rem',\n              color: '#333'\n            },\n            children: votos.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeVisualization, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = TreeVisualization;\nexport default TreeVisualization;\nvar _c;\n$RefreshReg$(_c, \"TreeVisualization\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","TreeVisualization","votos","_s","canvasRef","drawLeaf","ctx","x","y","size","angle","color","save","translate","rotate","scale","fillStyle","beginPath","moveTo","bezierCurveTo","lineTo","closePath","fill","restore","canvas","current","getContext","isMobile","window","innerWidth","width","offsetWidth","height","offsetHeight","clearRect","skyGradient","createLinearGradient","addColorStop","fillRect","groundGradient","shadowColor","shadowBlur","arc","Math","PI","treeImage","Image","onload","treeSize","treeX","treeY","drawImage","drawLeavesAfterTree","treeCenterX","treeCenterY","forEach","voto","index","baseRadius","sqrt","radius","randomAngle","random","randomRadius","leafX","cos","leafY","sin","baseLeafSize","leafSize","leafColor","prediccion","leafAngle","onerror","drawOriginalTree","src","trunkGradient","trunkHeight","trunkY","strokeStyle","lineWidth","lineCap","branchBaseY","branchMidY","branchEndY","branchSecY","branchSecMidY","branchSecEndY","branchTopY","branchTopMidY","branchTopEndY","quadraticCurveTo","stroke","style","border","borderRadius","overflow","children","ref","display","fileName","_jsxFileName","lineNumber","columnNumber","position","bottom","left","background","padding","backdropFilter","margin","fontSize","flexDirection","gap","alignItems","backgroundColor","marginTop","length","_c","$RefreshReg$"],"sources":["/home/devdisnovo/Documentos/PROYECTOS/merci/client/src/components/TreeVisualization.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\ninterface Voto {\n  id: number;\n  nombre: string;\n  prediccion: 'varon' | 'nina';\n  comentario?: string;\n  foto_url?: string;\n  fecha_voto: string;\n}\n\ninterface TreeVisualizationProps {\n  votos: Voto[];\n}\n\nconst TreeVisualization: React.FC<TreeVisualizationProps> = ({ votos }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // Función para dibujar hoja SVG\n  const drawLeaf = (ctx: CanvasRenderingContext2D, x: number, y: number, size: number, angle: number, color: string) => {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.scale(size / 76, size / 76); // Escalar basado en el viewBox del SVG\n\n    // Dibujar la forma de la hoja usando el path del SVG\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    \n    // Path del SVG convertido a coordenadas de canvas\n    ctx.moveTo(57, 22.1667);\n    ctx.bezierCurveTo(49.0833, 28.5, 52.25, 31.6667, 50.6667, 36.4167);\n    ctx.bezierCurveTo(49.0833, 41.1667, 50.6667, 42.75, 44.3333, 47.5);\n    ctx.bezierCurveTo(36.2227, 53.583, 29.2917, 49.875, 29.2917, 49.875);\n    ctx.bezierCurveTo(27.7083, 51.4583, 21.7708, 54.2292, 21.7708, 54.2292);\n    ctx.lineTo(20.0143, 50.7285);\n    ctx.bezierCurveTo(26.3476, 49.1452, 27.7083, 47.1042, 27.7083, 47.1042);\n    ctx.bezierCurveTo(26.125, 43.9375, 23.75, 38, 28.5, 30.0833);\n    ctx.bezierCurveTo(33.25, 22.1667, 57, 22.1667, 57, 22.1667);\n    ctx.closePath();\n    ctx.fill();\n\n    // Agregar sombra interna para dar profundidad\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n    ctx.beginPath();\n    ctx.moveTo(30.0833, 44.3333);\n    ctx.lineTo(31.6667, 45.9167);\n    ctx.lineTo(31.6667, 45.9167);\n    ctx.bezierCurveTo(34.8333, 44.3333, 36.4167, 39.5833, 36.4167, 39.5833);\n    ctx.bezierCurveTo(38, 34.8333, 45.9167, 26.9167, 45.9167, 26.9167);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const isMobile = window.innerWidth <= 768;\n\n    // Configurar canvas\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Limpiar canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Dibujar cielo con gradiente más suave\n    const skyGradient = ctx.createLinearGradient(0, 0, 0, height * 0.7);\n    skyGradient.addColorStop(0, '#87CEEB');\n    skyGradient.addColorStop(0.5, '#B0E0E6');\n    skyGradient.addColorStop(1, '#98FB98');\n    ctx.fillStyle = skyGradient;\n    ctx.fillRect(0, 0, width, height);\n\n    // Dibujar suelo\n    const groundGradient = ctx.createLinearGradient(0, height * 0.7, 0, height);\n    groundGradient.addColorStop(0, '#98FB98');\n    groundGradient.addColorStop(1, '#228B22');\n    ctx.fillStyle = groundGradient;\n    ctx.fillRect(0, height * 0.7, width, height * 0.3);\n\n    // Dibujar nubes decorativas (detrás del árbol)\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n    ctx.shadowColor = 'rgba(255, 255, 255, 0.5)';\n    ctx.shadowBlur = 10;\n    \n    // Nube izquierda\n    ctx.beginPath();\n    ctx.arc(width * 0.15, height * 0.08, 35, 0, 2 * Math.PI);\n    ctx.arc(width * 0.15 + 30, height * 0.08, 28, 0, 2 * Math.PI);\n    ctx.arc(width * 0.15 + 55, height * 0.08, 22, 0, 2 * Math.PI);\n    ctx.arc(width * 0.15 + 20, height * 0.08 - 15, 25, 0, 2 * Math.PI);\n    ctx.fill();\n\n    // Nube derecha\n    ctx.beginPath();\n    ctx.arc(width * 0.85, height * 0.12, 30, 0, 2 * Math.PI);\n    ctx.arc(width * 0.85 + 25, height * 0.12, 25, 0, 2 * Math.PI);\n    ctx.arc(width * 0.85 + 45, height * 0.12, 18, 0, 2 * Math.PI);\n    ctx.arc(width * 0.85 + 15, height * 0.12 - 12, 20, 0, 2 * Math.PI);\n    ctx.fill();\n\n    ctx.shadowBlur = 0;\n\n    // Cargar y dibujar la imagen del árbol\n    const treeImage = new Image();\n    treeImage.onload = () => {\n      // Calcular dimensiones del árbol centrado\n      const treeSize = isMobile ? 200 : 300;\n      const treeX = (width / 2) - (treeSize / 2);\n      const treeY = isMobile ? height - 280 : height - 380;\n      \n      // Dibujar la imagen del árbol\n      ctx.drawImage(treeImage, treeX, treeY, treeSize, treeSize);\n      \n      // Después de dibujar el árbol, dibujar las hojas\n      drawLeavesAfterTree();\n    };\n    \n    // Función para dibujar las hojas después de que se carga el árbol\n    const drawLeavesAfterTree = () => {\n      // Configuraciones para posicionamiento de hojas\n      const treeCenterX = width / 2;\n      const treeCenterY = isMobile ? height - 150 : height - 200; // Ajustado para árbol más bajo\n      \n      // Dibujar hojas usando espiral de Fibonacci para distribución más natural\n      votos.forEach((voto, index) => {\n        const angle = index * 2.4; // Ángulo dorado\n        // Reagrupar distribución 15% más al centro (reducir radio)\n        const baseRadius = isMobile ? (50 + Math.sqrt(index) * 8) : (100 + Math.sqrt(index) * 18);\n        const radius = baseRadius * 0.85; // Reducir 15% para reagrupar al centro\n        \n        // Agregar variación aleatoria para hacer más natural\n        const randomAngle = (Math.random() - 0.5) * 0.5;\n        const randomRadius = (Math.random() - 0.5) * 20;\n        \n        const leafX = treeCenterX + Math.cos(angle + randomAngle) * (radius + randomRadius);\n        const leafY = treeCenterY + Math.sin(angle + randomAngle) * (radius + randomRadius) * 0.6; // Más ovalado\n        \n        // Reducir tamaño de hojas 5%\n        const baseLeafSize = 87 + Math.random() * 38;\n        const leafSize = baseLeafSize * 0.95; // Reducir 5%\n        const leafColor = voto.prediccion === 'varon' ? '#1E40AF' : '#BE185D';\n        const leafAngle = Math.random() * Math.PI * 2; // Rotación aleatoria\n        \n        drawLeaf(ctx, leafX, leafY, leafSize, leafAngle, leafColor);\n      });\n    };\n    \n    // Intentar cargar la imagen del árbol, si no existe usar el árbol dibujado\n    treeImage.onerror = () => {\n      // Si no se puede cargar la imagen, dibujar el árbol original\n      drawOriginalTree();\n      drawLeavesAfterTree();\n    };\n    \n    treeImage.src = '/arbol.png';\n    \n    // Función para dibujar el árbol original si no hay imagen\n    const drawOriginalTree = () => {\n      // Dibujar tronco del árbol con gradiente (estirado hasta abajo, ajustado para móvil)\n      const trunkGradient = ctx.createLinearGradient(width / 2 - 25, height - 280, width / 2 + 25, height - 280);\n      trunkGradient.addColorStop(0, '#8B4513');\n      trunkGradient.addColorStop(0.5, '#A0522D');\n      trunkGradient.addColorStop(1, '#8B4513');\n      ctx.fillStyle = trunkGradient;\n      // Bajar el tronco más hacia el borde inferior\n      const trunkHeight = isMobile ? 300 : 350;\n      const trunkY = isMobile ? (height - 300) : (height - 350);\n      ctx.fillRect(width / 2 - 25, trunkY, 50, trunkHeight);\n\n      // Dibujar ramas principales con mejor distribución\n      ctx.strokeStyle = '#654321';\n      ctx.lineWidth = 10;\n      ctx.lineCap = 'round';\n      \n      // Posiciones base para las ramas (ajustadas para posición más baja)\n      const branchBaseY = isMobile ? (height - 300) : (height - 360);\n      const branchMidY = isMobile ? (height - 330) : (height - 390);\n      const branchEndY = isMobile ? (height - 350) : (height - 410);\n      const branchSecY = isMobile ? (height - 320) : (height - 380);\n      const branchSecMidY = isMobile ? (height - 340) : (height - 400);\n      const branchSecEndY = isMobile ? (height - 360) : (height - 420);\n      const branchTopY = isMobile ? (height - 310) : (height - 370);\n      const branchTopMidY = isMobile ? (height - 350) : (height - 410);\n      const branchTopEndY = isMobile ? (height - 390) : (height - 450);\n      \n      // Rama izquierda principal\n      ctx.beginPath();\n      ctx.moveTo(width / 2 - 15, branchBaseY);\n      ctx.quadraticCurveTo(width / 2 - 60, branchMidY, width / 2 - 100, branchEndY);\n      ctx.stroke();\n      \n      // Rama derecha principal\n      ctx.beginPath();\n      ctx.moveTo(width / 2 + 15, branchBaseY);\n      ctx.quadraticCurveTo(width / 2 + 60, branchMidY, width / 2 + 100, branchEndY);\n      ctx.stroke();\n      \n      // Ramas secundarias izquierdas\n      ctx.lineWidth = 6;\n      ctx.beginPath();\n      ctx.moveTo(width / 2 - 8, branchSecY);\n      ctx.quadraticCurveTo(width / 2 - 40, branchSecMidY, width / 2 - 70, branchSecEndY);\n      ctx.stroke();\n      \n      // Ramas secundarias derechas\n      ctx.beginPath();\n      ctx.moveTo(width / 2 + 8, branchSecY);\n      ctx.quadraticCurveTo(width / 2 + 40, branchSecMidY, width / 2 + 70, branchSecEndY);\n      ctx.stroke();\n      \n      // Ramas superiores\n      ctx.lineWidth = 4;\n      ctx.beginPath();\n      ctx.moveTo(width / 2, branchTopY);\n      ctx.quadraticCurveTo(width / 2 - 30, branchTopMidY, width / 2 - 50, branchTopEndY);\n      ctx.stroke();\n      \n      ctx.beginPath();\n      ctx.moveTo(width / 2, branchTopY);\n      ctx.quadraticCurveTo(width / 2 + 30, branchTopMidY, width / 2 + 50, branchTopEndY);\n      ctx.stroke();\n    };\n\n  }, [votos]);\n\n  return (\n    <div style={{ width: '100%', height: '625px', border: '2px solid #ddd', borderRadius: '10px', overflow: 'hidden' }}>\n      <canvas\n        ref={canvasRef}\n        style={{ width: '100%', height: '100%', display: 'block' }}\n      />\n      \n      {/* Leyenda */}\n      <div style={{\n        position: 'absolute',\n        bottom: '20px',\n        left: '20px',\n        background: 'rgba(255, 255, 255, 0.9)',\n        padding: '15px',\n        borderRadius: '10px',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.3)'\n      }}>\n        {(!window.innerWidth || window.innerWidth > 768) && (\n          <h4 style={{ margin: '0 0 10px 0', color: '#333', fontSize: '1rem' }}>Leyenda</h4>\n        )}\n        <div style={{ display: 'flex', flexDirection: window.innerWidth <= 768 ? 'row' : 'column', gap: '8px', alignItems: 'center' }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n            <div style={{ width: '20px', height: '15px', backgroundColor: '#1E40AF', borderRadius: '50%' }}></div>\n            <span style={{ fontSize: '0.9rem', color: '#333' }}>Niño</span>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n            <div style={{ width: '20px', height: '15px', backgroundColor: '#BE185D', borderRadius: '50%' }}></div>\n            <span style={{ fontSize: '0.9rem', color: '#333' }}>Niña</span>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginTop: window.innerWidth <= 768 ? '0' : '5px' }}>\n            <span style={{ fontSize: '1.2rem' }}>🌿</span>\n            <span style={{ fontSize: '0.9rem', color: '#333' }}>{votos.length}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TreeVisualization; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}